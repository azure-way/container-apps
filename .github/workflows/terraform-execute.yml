name: Terraform test build
on:
  workflow_call:
    inputs:
      terraform_directory:
        required: true
        type: string
      backend_key:
        required: true
        type: string
      badge_name:
        required: true
        type: string
      badge_label: 
        required: true
        type: string

jobs:
  terraform-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.terraform_directory || './terraform' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="access_key=${{secrets.access_key}}" -backend-config="storage_account_name=${{secrets.storage_account_name}}" -backend-config="container_name=${{secrets.container_name}}" -backend-config="key=${{ inputs.backend_key }}"
    
      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve -input=false -var="spn-client-id=${{secrets.spn_client_id}}" -var="spn-client-secret=${{secrets.spn_client_secret}}" -var="spn-tenant-id=${{secrets.AZURE_TENANT_ID}}" -var="subscription-id=${{secrets.subscription_id}}"
        continue-on-error: false        

      - name: Terraform init reconfigure
        run: terraform init -reconfigure -backend-config="access_key=${{secrets.access_key}}" -backend-config="storage_account_name=${{secrets.storage_account_name}}" -backend-config="container_name=${{secrets.container_name}}" -backend-config="key=${{ inputs.backend_key }}"
        continue-on-error: false            

      - name: Export Terraform Outputs as Environment Variables
        env:
          GITHUB_ENV: $GITHUB_ENV
        run: |
          #!/bin/bash
          # Get all Terraform outputs in JSON format
          OUTPUTS=$(terraform output -json)
          # Parse JSON and export each output as an environment variable
          for key in $(echo "$OUTPUTS" | jq -r 'keys[]'); do
            value=$(echo "$OUTPUTS" | jq -r ".\"$key\".value")
            # Export the environment variable
            echo "$key=$value" >> $GITHUB_ENV
          done         
